<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello,world!你好,世界!</title>
    <url>/2019/07/04/my%20first/</url>
    <content><![CDATA[<p>不知道该说什么，但转念一想还有什么比“hello world”更合适的吗？（笑）虽然早在七月初就建立了自己的博客，但因为考试一直到现在才有了时间来真正开始，万分激动。在此先要感谢羊哥<a href="https://space.bilibili.com/384068749" target="_blank" rel="noopener">codesheep</a>视频的详细讲解，对我搭建博客起了很大的帮助，名副其“手把手”之实啊，哈哈。以下便是对自己之后写博客的小思考。</p>
<a id="more"></a>
<h4 id="对于搭建个人博客这个念头，起因很简单："><a href="#对于搭建个人博客这个念头，起因很简单：" class="headerlink" title="对于搭建个人博客这个念头，起因很简单："></a>对于搭建个人博客这个念头，起因很简单：</h4><ul>
<li>一是觉得很cool，很有意思。其实在小学、初中的时候偶尔用博客写一些日记、作文什么的，可惜之后就没怎么动过了。对于这种个人博客开始还以为和以前用的新浪博客之类差不多，了解了一番后才明白有所区别。首先是写作方式的不同，个人博客用的是markdown语法，而新浪博客等是直接打字；其次是自由度（超重要——破音），不像那些博客，个人博客中风格主题、模块排布、程序应用等都可以根据自己的喜好来，感觉就像自己的一个小天地由我随意操作，真的很有成就感。<br></li>
<li>二是羊哥视频里说的个人博客的重要性了。首先这个对自己的<strong>总结能力</strong>有很大提升，可以将自己学的知识留下一个刻痕，使之不容易流失（即找到一个输出点，笔记什么的也可以的啦），这样可以系统地整合自己某一阶段的学习成果，加深对技术点的理解（即写的过程=复现），毕竟看一个东西是容易忘的，加上自己的理解再去复现的话总会深刻许多；其次，个人博客不仅是一个很好的备忘录，还是一个优秀的踩坑记录，没踩过一个坑便要记录下来，防止第二次；另外，写个人博客可以让你有一张“自己的<strong>知识清单</strong>”，通过自己的学习路径形成一套体系，毕竟成文、成体系的东西才便于掌握；再者，你的问题也会成为别人的问题，像博客这样一个公开的东西总会吸引他人的观看，从而结交的志同道合的小伙伴；最后，写博客也可以提高自己的写作水平不是吗，而且有一个个人的技术博客在面试的时候是一个很好的加分项。</li>
</ul>
<hr>
<h4 id="其实在写博客之前，我还是有些许担心的："><a href="#其实在写博客之前，我还是有些许担心的：" class="headerlink" title="其实在写博客之前，我还是有些许担心的："></a>其实在写博客之前，我还是有些许担心的：</h4><p>1.自己作为初学者，没有技术含量怎么办？<br>2.写的博客太低级会不会被喷？</p>
<h4 id="羊哥给了我解答："><a href="#羊哥给了我解答：" class="headerlink" title="羊哥给了我解答："></a>羊哥给了我解答：</h4><p>1.初学者不是我应该担心的问题，我所注意的就是写就对了。正如上文所说我犯过的错、踩过的坑，未尝不是他人也可能遇到的，这时候我的博客是不是就对别人有所帮助，有了价值呢？<br>2.被喷很正常，他也经常被喷，这不要紧，只有写的东西客观公正、可以复现、能带给别人一定价值或参考就有意义了，那些大牛不也被喷，毕竟喷的人出于什么目的我们也不知道，不也在意这个事情。</p>
<hr>
<h4 id="个人博客应该注意些什么呢？思考一番我想应该有这么些"><a href="#个人博客应该注意些什么呢？思考一番我想应该有这么些" class="headerlink" title="个人博客应该注意些什么呢？思考一番我想应该有这么些"></a>个人博客应该注意些什么呢？思考一番我想应该有这么些</h4><ul>
<li><strong>内容为王：</strong>技术博客嘛，就应该一内容沉淀为主，不要有什么乌七八糟的东西，当然向随笔、感想等这些我认为还是可以有的。</li>
<li><strong>坚持很重要：</strong>写博客自然想让别人看，但是不管有没有人看，自己都应该坚持写作。我相信只要内容质量在稳步提高，放在平台是就肯定会有关注量的。</li>
<li><strong>敬畏之心：</strong>对知识对内容一定要有敬畏之心，要尊重知识产权。对于别人的文字、代码、片段一定要表明出处，对他人对自己这应该是起码的尊重。</li>
<li><strong>可复现：</strong>所写、所说一定要可复现，不然都是耍流氓。毕竟别人看你的博客就是要解决问题的。<br><br>以上就是今日的一些随想，感谢你片刻的驻足。</li>
</ul>
]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>随机行走——三角形区域</title>
    <url>/2020/04/24/%E9%9A%8F%E6%9C%BA%E8%A1%8C%E8%B5%B0%E2%80%94%E2%80%94%E4%B8%89%E8%A7%92%E5%BD%A2%E5%8C%BA%E5%9F%9F/</url>
    <content><![CDATA[<p> <strong>本篇文章对随机行走问题的一个特例，即三角形区域行走进行代码解决。具体分为两部分:</strong></p>
<a id="more"></a>
<ul>
<li>问题提出</li>
<li>代码详情</li>
</ul>
<hr>
<h2 id="问题提出"><a href="#问题提出" class="headerlink" title="问题提出"></a>问题提出</h2><p>假设存在一个有许多小瓷砖拼起来的三角形区域，所有瓷砖都是边长为1的等边三角形，显然三角形区域是边长为n的等边三角形有1只小虫在该区域内随机行走，小虫每次行走可以停留在原来的小瓷砖内，也可以走到与原来的小瓷砖以边相邻的小瓷砖中去，初始状态如图，求出小虫须多少步(停留在当前瓷砖也算作一步)才能走遍整个三角形区域，若能走遍，则输出小虫走到每块小瓷砖的次数。<br><img src="https://img-blog.csdnimg.cn/20200402135950208.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNjc4NzMx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<hr>
<h2 id="代码详情"><a href="#代码详情" class="headerlink" title="代码详情"></a>代码详情</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;ctime&gt;</span><br><span class="line">#include&lt;cstdlib&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">//二维向量初始化</span><br><span class="line">void init(vector&lt;vector&lt;int&gt; &gt;&amp; area, int row) &#123;</span><br><span class="line">	area.resize(row);</span><br><span class="line">	for (int i = 0; i &lt; row; i++) &#123;</span><br><span class="line">		area.push_back(vector&lt;int&gt;());</span><br><span class="line">		area[i].resize(i * 2 + 1, 0);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">//判断是否走遍全区域</span><br><span class="line">bool judge(vector&lt;vector&lt;int&gt; &gt;&amp; area, int&amp; border) &#123;</span><br><span class="line">	for (int i = 0; i &lt; border; i++) &#123;</span><br><span class="line">		for (int j = 0; j &lt; area[i].size(); j++) &#123;</span><br><span class="line">			if (!area[i][j]) return false;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	return true;</span><br><span class="line">&#125;</span><br><span class="line">//输出每小块到达次数</span><br><span class="line">void print(vector&lt;vector&lt;int&gt; &gt;&amp; area, int&amp; border) &#123;</span><br><span class="line">	for (int i = 0; i &lt; border; i++) &#123;</span><br><span class="line">		cout &lt;&lt; i &lt;&lt; &quot;行: &quot;;</span><br><span class="line">		for (int j = 0; j &lt; area[i].size(); j++) cout &lt;&lt; area[i][j] &lt;&lt; &quot; &quot;;</span><br><span class="line">		cout &lt;&lt; endl;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">//具体行动过程：0为原地,1为左,2为有,3为上下(奇上偶下)</span><br><span class="line">void process(vector&lt;vector&lt;int&gt; &gt;&amp; area, int&amp; row, int&amp; column, int&amp; border) &#123;</span><br><span class="line">	int choice = rand() % 4;</span><br><span class="line">	cout &lt;&lt; row &lt;&lt; &quot;行&quot; &lt;&lt; column &lt;&lt; &quot;列: &quot; &lt;&lt; choice &lt;&lt; endl;</span><br><span class="line">	if (choice == 0) area[row][column]++;</span><br><span class="line">	if (choice == 1) column == 0 ? area[row][column]++ : area[row][--column];</span><br><span class="line">	if (choice == 2)column == row * 2 ? area[row][column]++ : area[row][++column]++;</span><br><span class="line">	if (choice == 3) &#123;</span><br><span class="line">		if (column % 2)area[--row][--column]++;</span><br><span class="line">		else &#123;</span><br><span class="line">			if (row == border - 1) area[row][column]++;</span><br><span class="line">			else area[++row][++column]++;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">	srand(time(NULL));</span><br><span class="line">	int row;</span><br><span class="line">	cout &lt;&lt; &quot;input row:&quot;;</span><br><span class="line">	cin &gt;&gt; row;</span><br><span class="line">	if (row == 1) &#123;</span><br><span class="line">		cout &lt;&lt; &quot;0行:1&quot; &lt;&lt; endl;</span><br><span class="line">		return 0;</span><br><span class="line">	&#125;</span><br><span class="line">	if (row &lt; 1) &#123;</span><br><span class="line">		cout &lt;&lt; &quot;Error row!&quot; &lt;&lt; endl;</span><br><span class="line">			return 1;</span><br><span class="line">	&#125;</span><br><span class="line">	vector&lt;vector&lt;int&gt; &gt; area;</span><br><span class="line">	init(area, row);</span><br><span class="line">	int now_row = 0;</span><br><span class="line">	int now_column = 0;</span><br><span class="line">	area[0][0]++;</span><br><span class="line">	while (1) &#123;</span><br><span class="line">		process(area, now_row, now_column, row);</span><br><span class="line">		if (judge(area, row)) &#123;</span><br><span class="line">			print(area, row);</span><br><span class="line">			break;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	system(&quot;pause&quot;);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo搭建踩坑记录</title>
    <url>/2019/08/25/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<p>看到关于博客的话题，想起自己在搭建hexo博客时的折腾，便写此文记录一下自己的搭建过程中踩过的坑，若有所助，倍感荣幸。</p>
<a id="more"></a>

<h3 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h3><blockquote>
<ul>
<li>安装node.js、npm、git<br>  这两个均在官网上下载即可: <a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js</a> <a href="https://git-scm.com/" target="_blank" rel="noopener">git</a>（<em>node.js建议下载LTS长期支持版</em>）</li>
<li>创建<a href="https://github.com" target="_blank" rel="noopener">github</a>账户</li>
<li>安装hexo</li>
<li>上传github</li>
<li>开始创作</li>
</ul>
</blockquote>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><strong>关于hexo搭建的资料真的很多，我这就写点踩过的坑，不多重复了</strong></p>
<ul>
<li><a href="https://www.bilibili.com/video/av44544186" target="_blank" rel="noopener">手把手教你从0开始搭建自己的个人博客</a></li>
<li><a href="https://www.cnblogs.com/debugxw/p/11006734.html" target="_blank" rel="noopener">win10使用Hexo+GitHub搭建个人博客</a></li>
</ul>
<h3 id="填坑记录"><a href="#填坑记录" class="headerlink" title="填坑记录"></a>填坑记录</h3><h4 id="1-npm速度慢。"><a href="#1-npm速度慢。" class="headerlink" title="1. npm速度慢。"></a>1. <code>npm</code>速度慢。</h4><p>毕竟墙是我天朝传统，还好有淘宝的镜像，可以用<code>cnpm</code>代替<code>npm</code><br>安装代码:<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p>
<h4 id="2-启动运行"><a href="#2-启动运行" class="headerlink" title="2.启动运行"></a>2.启动运行</h4><p><code>hexo g</code>–将md文件生成html文件<br><code>hexo s</code>–启动服务器，之后便可在<code>localhost:4000</code>预览了</p>
<blockquote>
<p>注：要先生成才能预览</p>
</blockquote>
<h4 id="3-hexo无法上传远端"><a href="#3-hexo无法上传远端" class="headerlink" title="3.hexo无法上传远端"></a>3.hexo无法上传远端</h4><ul>
<li>在<strong>cmd</strong>中使用命令： <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>运行一半后出现错误与警告，<br>原因：安装git时所选使用位置不对，无法在<strong>cmd</strong>中使用。<br>解决方法：直接将blog文件在<strong>git bush</strong>打开，然后照常使用原先命令即可</p>
<ul>
<li><strong>ssh</strong>密钥无法推送：可换用<strong>https</strong>链接的方式推送</li>
</ul>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>整理了一下，现在看来都不是什么大问题，可在当时却困扰了我几天，<del>在弄不明白时甚至全部清空重新安装</del>(笑)，不知你是否也有相同的问题，希望能有所帮助。</p>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
